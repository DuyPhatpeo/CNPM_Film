@model ProjectFilm_CNPM.Models.ERD.NguoiDung
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <!-- Add Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <style>
        .popup-content {
            background-color: #fefefe;
            padding: 20px;
            border: 1px solid #888;
            width: 40%;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.5);
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .toggle-password {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
        }

            .toggle-password:focus {
                outline: none;
                border-color: blue;
            }
    </style>
</head>
<script src="~/Scripts/bootstrap.bundle.min.js"></script>
<body>
    <div class="popup-content">
        <div class="text-center">
            <img src="~/Public/img/icon_login.svg" style="width:190px;height:120px" />
            <h2 class="mt-3">ĐĂNG KÝ</h2>
        </div> 
            <form id="registerForm" asp-action="@Url.Action("DangKy", "Module")" method="post" enctype="multipart/form-data">
                <div class="row row-cols-6">
                    <div class="col-6">
                        <div class="form-group">
                            <label for="fullName">Họ và tên:</label>
                            <input type="text" value="" id="fullName" name="TenND" class="form-control rounded-2" required>
                            @Html.ValidationMessageFor(model => model.TenND, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="email">Email:</label>
                            <input type="email" value="" id="email" name="Email" class="form-control rounded-2" required>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="password">Mật khẩu:</label>
                            <div style="position: relative;">
                                <input type="password" value="" id="MatKhau" name="MatKhau" class="form-control rounded-2" required>
                                @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                                <button type="button" class="toggle-password bg-transparent border-0" onclick="togglePasswordVisibility('password')">
                                    <img src="~/Public/img/icon/eye-slash.svg" alt="Toggle Password" />
                                </button>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="confirmPassword">Xác nhận mật khẩu:</label>
                            <div style="position: relative;">
                                <input type="password" id="confirmPassword" value="" name="XacNhanMatKhau" class="form-control rounded-2" required>
                                @Html.ValidationMessageFor(model => model.XacNhanMatKhau, "", new { @class = "text-danger" })
                                <button type="button" class="toggle-password bg-transparent border-0" onclick="togglePasswordVisibility('confirmPassword')">
                                    <img src="~/Public/img/icon/eye-slash.svg" alt="Toggle Password" />
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group">
                            <label for="phone">Số điện thoại:</label>
                            <input type="text" id="SDT" value="" name="SDT" class="form-control rounded-2" required>
                            @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="birthDate">Ngày sinh:</label>
                            <input type="date" id="birthDate" value="" name="NgaySinh" class="form-control rounded-2" required>
                        </div>
                        <div class="form-group">
                            <label>Giới tính:</label><br>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="GioiTinh" id="male" value="true" required>
                                <label class="form-check-label" for="male">Nam</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="GioiTinh" id="female" value="false" required>
                                <label class="form-check-label" for="female">Nữ</label>
                            </div>
                        </div>


                    </div>
                </div>
                <button type="submit" class="btn btn-primary btn-block mx-auto" value="Submit" style="width: 50%;">Đăng ký</button>
            </form>
    </div>

    <script>
        
        function togglePasswordVisibility(fieldId) {
            var passwordInput = document.getElementById(fieldId);
            var passwordToggle = passwordInput.nextElementSibling;
            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                passwordToggle.innerHTML = '<img src="/Public/img/icon/eye.svg" />';
            } else {
                passwordInput.type = "password";
                passwordToggle.innerHTML = '<img src="/Public/img/icon/eye-slash.svg" />';
            }
        }
        var today = new Date();

        
        var maxDate = new Date(today.getFullYear() - 10, today.getMonth(), today.getDate());
        var formattedMaxDate = maxDate.toISOString().split('T')[0];
        document.getElementById("birthDate").setAttribute("max", formattedMaxDate);
    </script>
</body>
</html>
